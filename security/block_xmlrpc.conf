location ~* xmlrpc.php$ {

	# Identify Jetpack by user agent. A more secure way is by IP address.
	# See below to understand why this is the preferred method.
	set $is_jetpack_ua 0;
	if ($http_user_agent = "Jetpack by WordPress.com" ) {
			set $is_jetpack_ua 1;
	}

	set $do_block_xmlrpc "${allow_jetpack}${is_xmlrpc_whitelist_ip}${is_jetpack_ua}${is_automattic_ip}";


	# Don't allow Jetpack, not a whitelisted IP = block
	if ($do_block_xmlrpc ~* "^00.*") { deny all; }

	# Allow Jetpack by UA, not a whitelisted IP, not the Jetpack UA = block
	if ($do_block_xmlrpc ~* "ua00\d") { deny all; }

	# Allow Jetpack by UA and IP, not a whitelisted IP, is the Jetpack UA, but not the Jetpack IP = block
	if ($do_block_xmlrpc ~* "ip010") { deny all ; }

	## All other connections are allowed ##




	# Combine variables so we can check these with one if statment (no nested ifs)
	set $do_block_xmlrpc "${allow_jetpack}${allow_xmlrpc}";

	# Block everything if Jetpack isn't present and not a whitelisted IP
	if ( $do_bock_xmlrpc = '^00.*') { deny all; }

	set $do_allow_xmlrpc "${allow_jetpack}${is_jetpack_ua}${allow_xmlrpc}";

	# Not the Jetpack UA and no additional whitelisted IPs, then block
	if ( $do_allow_xmlrpc ~ "00*" ) { deny all; }

	# Allow Jetpack UA, matches Jetpack UA, no additional whitelisted IPs. Allow
	if ( do_allow_xmlrpc = 'ua10' )
	{
		# Parse the PHP
		include nginx_configs/includes/php.conf;
	}

	# Allow Jetpack by UA and IP, matches Jetpack UA, no additional whitelisted IPs. Check IPs
	if ( do_allow_xmlrpc = 'ip10' )
	{

        	allow 127.0.0.1;
        	deny all;

		# Parse the PHP
		include nginx_configs/includes/php.conf;
	}

	# Parse the PHP - this cannot be included in an if block
	include nginx_configs/includes/php.conf;

}
